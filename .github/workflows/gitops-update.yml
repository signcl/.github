name: GitOps Update Yaml

on:
  workflow_call:
    secrets:
      PAT_TOKEN:
        required: true
      GPG_KEY:
        required: false
      GPG_PASSPHRASE:
        required: false
    inputs:
      yamlFile:
        required: true
        type: string
      questionsFile:
        required: false
        type: string
      projectVersionFile:
        required: false
        type: string
      propertyPath:
        required: true
        type: string
      value:
        required: true
        type: string
      commitMessage:
        required: true
        type: string
      repository:
        required: false
        type: string
      headRef:
        required: false
        type: string
      branch:
        required: false
        type: string
      taggingMessage:
        required: false
        type: string
      gpgSign:
        required: false
        default: false
        type: boolean

jobs:
  gitops-update-yaml:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          # Optional. The caller repository will be checked out when empty
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.headRef }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Get image tag
        id: getImageTag
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.${{ inputs.propertyPath }}' ${{ inputs.yamlFile }}

      - name: Update values.yaml (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
        run: |
          echo ${{ steps.getImageTag.outputs.result }}
          sed -i 's/${{ steps.getImageTag.outputs.result }} ## ${{ inputs.propertyPath }}/${{ inputs.value }} ## ${{ inputs.propertyPath }}/g' ${{ inputs.yamlFile }}
          sed -i 's/"${{ steps.getImageTag.outputs.result }}" ## ${{ inputs.propertyPath }}/"${{ inputs.value }}" ## ${{ inputs.propertyPath }}/g' ${{ inputs.yamlFile }}

      - name: Update questions.yaml (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
        if: inputs.questionsFile != ''
        run: |
          echo ${{ steps.getImageTag.outputs.result }}
          sed -i 's/${{ steps.getImageTag.outputs.result }} ## ${{ inputs.propertyPath }}/${{ inputs.value }} ## ${{ inputs.propertyPath }}/g' ${{ inputs.questionsFile }}
          sed -i 's/"${{ steps.getImageTag.outputs.result }}" ## ${{ inputs.propertyPath }}/"${{ inputs.value }}" ## ${{ inputs.propertyPath }}/g' ${{ inputs.questionsFile }}

      - name: Update Node.js package.json (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
        if: inputs.projectVersionFile == 'package.json'
        run: |
          echo "${{ steps.getImageTag.outputs.result }} -> ${{ inputs.value }}"
          sed -i -r 's/"version": "(.*)"/"version": "${{ inputs.value }}"/g' package.json

      - name: Import GPG key
        id: import_gpg
        # GitHub Actions sucks at providing a way to determine if a secret exists
        # I need an additional option for it
        if: inputs.gpgSign
        # if: ${{ secrets.GPG_PASSPHRASE }}
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - uses: signcl/git-auto-commit-action@master
        with:
          commit_message: ${{ inputs.commitMessage }}
          commit_options: ${{ inputs.gpgSign && '-S' || '' }}
          tagging_options: ${{ inputs.gpgSign && '-s' || '' }}
          commit_user_name: openbayes-bot
          commit_user_email: devops@openbayes.com
          commit_author: openbayes-bot <devops@openbayes.com>
          branch: ${{ inputs.branch }}
          tagging_message: ${{ inputs.taggingMessage }}
