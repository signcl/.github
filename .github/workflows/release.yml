name: Create GitHub Release

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      artifact_name:
        description: "Artifact to download and unpack before building image"
        required: false
        type: string
      chglog:
        required: false
        type: boolean
        default: true
      changelog_filename:
        required: false
        type: string
        default: "CHGLOG.md"
      bin_filename:
        required: false
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          # Set ref to current branch to get the latest changes from previous jobs
          ref: ${{ github.ref_name }}

      - name: Download a single artifact
        uses: actions/download-artifact@v5
        if: ${{ inputs.artifact_name }}
        with:
          name: ${{ inputs.artifact_name }}

      - name: Unzip artifact
        if: ${{ inputs.artifact_name }}
        run: tar -xvf artifact.tar

      - name: Download chglog configs
        if: ${{ inputs.chglog }}
        uses: actions/checkout@v5
        with:
          repository: signcl/.github
          path: chglog-configs

      - name: Prepare release ${{ inputs.tag }}
        if: ${{ inputs.chglog }}
        run: |
          docker run -v "$PWD":/workdir quay.io/git-chglog/git-chglog:0.15.1 \
            --config "/workdir/chglog-configs/.chglog/config.yml" \
            --repository-url https://github.com/${{ github.repository }} \
            ${{ inputs.tag }} > ${{ inputs.changelog_filename }}
          cat ${{ inputs.changelog_filename }}

      - name: Release ${{ inputs.tag }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          body_path: ${{ inputs.changelog_filename }}
          files: ${{ inputs.bin_filename }}
          # When `body_path` is empty, this action will use autogenerated changelog from GitHub
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
